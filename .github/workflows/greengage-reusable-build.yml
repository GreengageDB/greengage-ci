name: Greengage Reusable Docker Build Workflow

on:
  workflow_call:
    inputs:
      version:
        description: 'Version derived from tag (e.g., 6 or 7)'
        required: true
        type: string
      target_os:
        description: 'Target OS'
        required: true
        type: string
      target_os_version:
        description: 'Target OS version'
        required: false
        type: string
        default: ''
      python3:
        description: 'Python3 build argument'
        required: false
        type: string
        default: ''
      ref:
        description: 'Branch or ref to checkout'
        required: false
        type: string
    secrets:
      ghcr_token:
        description: 'GitHub token for GHCR access'
        required: true
    outputs:
      sha_image_tag:
        description: 'The constructed image name with SHA tag'
        value: ${{ jobs.build.outputs.sha_image_tag }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write  # Required to push to GHCR
    outputs:
      sha_image_tag: ${{ steps.build_and_push.outputs.sha_image_tag }}
    steps:
      # Checkout default branch if no ref is specified
      - name: Checkout Greengage repo
        if: ${{ inputs.ref == '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          submodules: recursive
          fetch-depth: 0  # Full history for tag resolution

      # Checkout specific branch or tag if ref is provided for manual runs compatibility
      - name: Checkout specified ref
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ghcr_token }}

      # Build and push Docker intermediate image with commit SHA tag
      - name: Build and push
        id: build_and_push
        run: |
          # Construct image name with version and OS
          IMAGE=ghcr.io/${{ github.repository }}/ggdb${{ inputs.version }}_${{ inputs.target_os }}${{ inputs.target_os_version }}
          # Determine tag as commit short SHA
          SHA=$(git rev-parse --short HEAD)
          SHA_IMAGE_TAG=$IMAGE:$SHA

          # Build from Dockerfile specific to target OS and push
          docker build --tag $SHA_IMAGE_TAG --push -f ci/Dockerfile.${{ inputs.target_os }}${{ inputs.target_os_version }} .

          # Set output for use in other jobs
          echo "sha_image_tag=$SHA_IMAGE_TAG" >> $GITHUB_OUTPUT
