name: Greengage Reusable Docker Build Workflow
on:
  workflow_call:
    inputs:
      version:
        description: 'Version derived from tag (e.g., 6 or 7)'
        required: true
        type: string
      target_os:
        description: 'Target OS'
        required: true
        type: string
      target_os_version:
        description: 'Target OS version'
        required: false
        type: string
        default: ''
      python3:
        description: 'Python3 build argument'
        required: false
        type: string
        default: ''
      ref:
        description: 'Branch or ref to checkout'
        required: false
        type: string
    secrets:
      ghcr_token:
        description: 'GitHub token for GHCR access'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout current if 'ref' not defined..
      - name: Checkout Greengage repo
        if: ${{ inputs.ref == '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          submodules: recursive
          fetch-depth: 0
      # ..or checkout 'ref' branch
      - name: Checkout specified ref
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine image tags
        id: set_tag
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "sha_tag=$SHORT_SHA" >> $GITHUB_OUTPUT
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/\//_/g')
          echo "build_version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            SAFE_BRANCH=$(echo ${{ github.head_ref }} | sed 's/[^a-zA-Z0-9._-]/_/g')
            echo "branch_tag=$SAFE_BRANCH" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            echo "version_tag=$VERSION" >> $GITHUB_OUTPUT
          fi
      - name: Build and push
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/ggdb${{ inputs.version }}_${{ inputs.target_os }}${{ inputs.target_os_version }}
          SHA_IMAGE_TAG=$IMAGE:${{ steps.set_tag.outputs.sha_tag }}

          docker build --tag $SHA_IMAGE_TAG --push -f ci/Dockerfile.${{ inputs.target_os }}${{ inputs.target_os_version }} .
