name: Greengage Reusable Docker Retag and Upload Workflow

on:
  workflow_call:
    inputs:
      version:
        description: 'Version derived from tag (e.g., 6 or 7)'
        required: true
        type: string
      target_os:
        description: 'Target OS'
        required: true
        type: string
      target_os_version:
        description: 'Target OS version'
        required: false
        type: string
        default: ''
      python3:
        description: 'Python3 build argument'
        required: false
        type: string
        default: ''
      ref:
        description: 'Branch or ref to checkout'
        required: false
        type: string
      sha_image_tag:
        description: 'Docker image name with SHA tag'
        required: true
        type: string
    secrets:
      ghcr_token:
        description: 'GitHub token for GHCR access'
        required: true

jobs:
  upload:
    runs-on: ubuntu-latest
    permissions:
      packages: write  # Required to push to GHCR
    steps:
      # Checkout default branch if no ref is specified
      - name: Checkout Greengage repo
        if: ${{ inputs.ref == '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          submodules: recursive
          fetch-depth: 0  # Full history for tag resolution

      # Checkout specific branch or tag if ref is provided
      - name: Checkout specified ref
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ghcr_token }}

      - name: Tag and push Docker image
        env:
          SHA_IMAGE_TAG: ${{ inputs.sha_image_tag }}
        run: |
          # Extract IMAGE from SHA_IMAGE_TAG
          IMAGE=${SHA_IMAGE_TAG%%:*}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV  # Make IMAGE available to subsequent steps

          # For pull requests, tag with safe branch name and push
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            SAFE_BRANCH=$(echo "${{ github.head_ref }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]/-/g; s/^-*//; s/-*$//; s/--*/-/g' | cut -c1-128)
            NEW_TAG="${IMAGE}:${SAFE_BRANCH:-unknown}"
            docker tag "$SHA_IMAGE_TAG" "$NEW_TAG"
            docker push "$NEW_TAG"
          # For tagged pushes, tag with git tag and push
          elif [[ "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            GIT_TAG=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/\//_/g' || echo "unknown")
            NEW_TAG="${IMAGE}:${GIT_TAG}"
            docker tag "$SHA_IMAGE_TAG" "$NEW_TAG"
            docker push "$NEW_TAG"
          else
            echo "Not a pull request or tagged push, skipping tagging"
          fi
